name: CI

on:
  push:
    branches: [ dev, main ]
  pull_request:
    branches: [ dev, main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install backend dependencies
        run: cd apps/client-api && npm ci

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: ESLint frontend
        run: cd frontend && npm run lint

      - name: ESLint backend
        run: cd apps/client-api && npm run lint

      - name: Prettier check
        run: |
          cd frontend && npm run format:check
          cd ../apps/client-api && npm run format:check

      - name: Rust Clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --manifest-path libs/fcra-compliance/Cargo.toml -- -D warnings

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install backend dependencies
        run: cd apps/client-api && npm ci

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Frontend tests
        run: cd frontend && npm test -- --coverage

      - name: Backend tests
        run: cd apps/client-api && npm test -- --coverage

      - name: Rust tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --manifest-path libs/fcra-compliance/Cargo.toml

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install backend dependencies
        run: cd apps/client-api && npm ci

      - name: Build frontend
        run: cd frontend && npm run build

      - name: Build backend
        run: cd apps/client-api && npm run build
